function Point(n,e){this.X=n,this.Y=e}function Rectangle(n,e,t,i){this.X=n,this.Y=e,this.Width=t,this.Height=i}function Vector(n,e){this.Intensity=n,this.Angle=e}function Result(n,e,t){this.Name=n,this.Score=Math.round(1e4*e)/100,this.Time=t}function Polyline(n,e){this.Gesture=n,this.Indexes=e,this.Lengths=CalculateLengthsPoly(n.Points,e)}function Gesture(n,e){this.Name=n,this.Points=e,this.Centroid=CalculateCentroid(e),this.Lengths=CalculateLengths(e),this.BoundingBox=CalculateBoundingBox(e),this.RotInv=!1,this.PointersNum=1}const DPR_PARAMS={FParam:26,SParam:22},ANGLE_ROTATION_INVARIANT=45,ANGLE_ROTATION_SENSITIVE=25,ANGLE_STEP=2,PHI=.5*(-1+Math.sqrt(5)),GAP_COST=.4,BALANCE=.6,SLOPE_TRESHOLD=DPR_PARAMS.FParam;function PolyRecognizer(){return new PolyRecognizer(false);}function PolyRecognizer(n){var e,t,i,o,P,w,r,a,s,u,h,l,c,g,f;this.DataSet=new Array,n&&(e=new Gesture("arrow",new Array(new Point(69,228),new Point(67,228),new Point(70,225),new Point(73,223),new Point(75,222),new Point(80,218),new Point(82,216),new Point(85,214),new Point(92,209),new Point(99,205),new Point(106,201),new Point(114,196),new Point(122,193),new Point(130,188),new Point(138,185),new Point(145,181),new Point(148,180),new Point(154,177),new Point(157,175),new Point(162,173),new Point(164,172),new Point(167,171),new Point(164,170),new Point(161,169),new Point(155,170),new Point(148,170),new Point(144,170),new Point(142,169),new Point(138,169),new Point(133,170),new Point(131,170),new Point(133,170),new Point(139,168),new Point(148,167),new Point(157,163),new Point(169,159),new Point(177,154),new Point(181,153),new Point(186,152),new Point(186,154),new Point(181,159),new Point(171,170),new Point(162,181),new Point(157,189),new Point(155,192),new Point(149,201),new Point(144,205),new Point(142,205))),t=new Gesture("caret",new Array(new Point(73,243),new Point(74,241),new Point(76,237),new Point(77,235),new Point(79,231),new Point(82,224),new Point(83,222),new Point(85,218),new Point(88,210),new Point(92,201),new Point(96,192),new Point(100,181),new Point(104,169),new Point(106,163),new Point(110,152),new Point(111,147),new Point(114,138),new Point(119,127),new Point(121,123),new Point(123,120),new Point(125,119),new Point(128,121),new Point(133,127),new Point(136,135),new Point(143,149),new Point(151,169),new Point(160,188),new Point(167,205),new Point(173,220),new Point(176,232),new Point(178,236),new Point(177,243))),i=new Gesture("check",new Array(new Point(86,195),new Point(88,199),new Point(89,201),new Point(91,205),new Point(95,209),new Point(96,211),new Point(100,217),new Point(102,219),new Point(105,223),new Point(108,227),new Point(110,230),new Point(112,232),new Point(114,234),new Point(114,230),new Point(113,226),new Point(113,222),new Point(115,211),new Point(117,203),new Point(120,190),new Point(124,180),new Point(127,176),new Point(134,165),new Point(142,155),new Point(150,146),new Point(156,141),new Point(159,138),new Point(161,134))),o=new Gesture("circle",new Array(new Point(119,132),new Point(115,133),new Point(112,134),new Point(108,136),new Point(104,138),new Point(98,143),new Point(92,149),new Point(90,153),new Point(88,157),new Point(85,166),new Point(84,175),new Point(85,184),new Point(86,193),new Point(90,202),new Point(95,209),new Point(98,212),new Point(104,217),new Point(116,221),new Point(123,221),new Point(131,219),new Point(136,217),new Point(147,213),new Point(153,208),new Point(156,205),new Point(162,193),new Point(165,181),new Point(163,168),new Point(160,158),new Point(157,154),new Point(148,141),new Point(145,138),new Point(135,130),new Point(133,128),new Point(125,129),new Point(119,131),new Point(114,135))),P=new Gesture("delete_mark",new Array(new Point(115,137),new Point(115,139),new Point(116,142),new Point(117,144),new Point(120,150),new Point(126,158),new Point(129,162),new Point(133,166),new Point(141,174),new Point(149,181),new Point(156,188),new Point(161,193),new Point(163,194),new Point(166,197),new Point(167,199),new Point(167,201),new Point(165,202),new Point(162,202),new Point(157,201),new Point(147,196),new Point(135,194),new Point(122,192),new Point(111,191),new Point(102,195),new Point(97,198),new Point(91,200),new Point(89,201),new Point(92,198),new Point(96,192),new Point(104,185),new Point(112,173),new Point(115,170),new Point(122,161),new Point(125,158),new Point(135,147),new Point(141,141),new Point(146,136))),w=new Gesture("left_curly_brace",new Array(new Point(143,125),new Point(141,125),new Point(139,125),new Point(135,126),new Point(133,126),new Point(131,127),new Point(129,127),new Point(125,129),new Point(123,131),new Point(119,134),new Point(115,137),new Point(112,139),new Point(109,142),new Point(107,145),new Point(106,147),new Point(105,149),new Point(107,150),new Point(110,150),new Point(114,149),new Point(118,150),new Point(122,149),new Point(124,149),new Point(128,151),new Point(132,152),new Point(135,155),new Point(137,158),new Point(138,160),new Point(138,166),new Point(132,175),new Point(127,178),new Point(124,181),new Point(115,187),new Point(111,190),new Point(105,193),new Point(108,191),new Point(111,190),new Point(118,188),new Point(122,187),new Point(129,189),new Point(131,190),new Point(134,196),new Point(133,203),new Point(132,205),new Point(124,218),new Point(120,226),new Point(118,236),new Point(120,245),new Point(125,251),new Point(131,250))),r=new Gesture("left_sq_bracket",new Array(new Point(144,122),new Point(141,122),new Point(139,122),new Point(137,121),new Point(134,121),new Point(131,121),new Point(129,122),new Point(125,122),new Point(122,123),new Point(119,123),new Point(116,123),new Point(114,123),new Point(112,124),new Point(109,123),new Point(107,124),new Point(105,125),new Point(103,128),new Point(103,131),new Point(103,135),new Point(103,141),new Point(104,143),new Point(105,153),new Point(106,159),new Point(106,163),new Point(107,171),new Point(107,174),new Point(108,183),new Point(108,192),new Point(108,199),new Point(108,207),new Point(108,213),new Point(108,219),new Point(108,222),new Point(108,225),new Point(108,227),new Point(110,229),new Point(112,230),new Point(115,231),new Point(121,232),new Point(128,234),new Point(134,234),new Point(139,235),new Point(145,237),new Point(150,236))),a=new Gesture("pigtail",new Array(new Point(65,219),new Point(68,220),new Point(70,221),new Point(73,220),new Point(75,220),new Point(80,220),new Point(84,219),new Point(89,217),new Point(91,216),new Point(94,215),new Point(99,213),new Point(105,211),new Point(108,209),new Point(113,207),new Point(116,205),new Point(122,201),new Point(130,193),new Point(135,190),new Point(141,182),new Point(145,177),new Point(147,175),new Point(151,167),new Point(152,161),new Point(153,159),new Point(152,152),new Point(151,148),new Point(146,142),new Point(142,141),new Point(134,143),new Point(132,145),new Point(123,153),new Point(118,163),new Point(115,175),new Point(115,179),new Point(115,193),new Point(116,198),new Point(119,215),new Point(126,226),new Point(135,233),new Point(147,234),new Point(160,232),new Point(169,228))),s=new Gesture("question_mark",new Array(new Point(99,141),new Point(100,139),new Point(101,137),new Point(103,134),new Point(105,132),new Point(108,129),new Point(111,128),new Point(113,126),new Point(116,124),new Point(119,122),new Point(122,121),new Point(126,120),new Point(130,122),new Point(134,122),new Point(138,124),new Point(141,127),new Point(144,131),new Point(146,133),new Point(149,138),new Point(150,140),new Point(152,144),new Point(152,150),new Point(152,152),new Point(151,156),new Point(149,161),new Point(146,164),new Point(143,166),new Point(136,169),new Point(132,169),new Point(129,169),new Point(126,169),new Point(124,168),new Point(121,167),new Point(119,167),new Point(118,170),new Point(118,173),new Point(118,178),new Point(120,186),new Point(120,188),new Point(121,195),new Point(122,197),new Point(122,201),new Point(122,204),new Point(122,208),new Point(121,210),new Point(121,212))),u=new Gesture("rectangle",new Array(new Point(66,162),new Point(64,165),new Point(64,167),new Point(64,169),new Point(64,172),new Point(64,174),new Point(64,179),new Point(65,182),new Point(65,185),new Point(65,189),new Point(66,192),new Point(66,198),new Point(67,202),new Point(67,205),new Point(67,211),new Point(68,216),new Point(68,219),new Point(68,223),new Point(68,226),new Point(67,228),new Point(67,231),new Point(67,234),new Point(67,237),new Point(67,239),new Point(69,241),new Point(71,240),new Point(74,238),new Point(77,238),new Point(85,237),new Point(93,238),new Point(102,239),new Point(111,237),new Point(122,237),new Point(132,238),new Point(143,239),new Point(153,240),new Point(156,240),new Point(167,241),new Point(176,243),new Point(188,245),new Point(192,245),new Point(199,247),new Point(201,247),new Point(203,246),new Point(203,243),new Point(200,237),new Point(197,229),new Point(196,225),new Point(191,213),new Point(187,199),new Point(183,183),new Point(181,168),new Point(179,157),new Point(178,153),new Point(177,148),new Point(175,147),new Point(173,148),new Point(170,148),new Point(162,146),new Point(151,142),new Point(148,142),new Point(136,140),new Point(133,141),new Point(120,141),new Point(117,141),new Point(101,144),new Point(90,147))),h=new Gesture("right_curly_brace",new Array(new Point(102,139),new Point(105,138),new Point(107,138),new Point(111,138),new Point(113,137),new Point(118,137),new Point(122,137),new Point(127,137),new Point(132,138),new Point(136,140),new Point(139,141),new Point(142,143),new Point(144,145),new Point(145,148),new Point(146,151),new Point(145,154),new Point(144,156),new Point(141,159),new Point(140,161),new Point(136,163),new Point(129,168),new Point(125,171),new Point(121,172),new Point(118,174),new Point(115,175),new Point(113,176),new Point(111,178),new Point(112,180),new Point(115,182),new Point(118,185),new Point(123,188),new Point(130,189),new Point(137,190),new Point(141,191),new Point(147,190),new Point(150,188),new Point(152,187),new Point(151,184),new Point(149,183),new Point(142,183),new Point(134,184),new Point(131,185),new Point(122,191),new Point(117,196),new Point(112,200),new Point(111,202),new Point(110,204),new Point(113,208),new Point(119,211),new Point(123,212),new Point(126,214),new Point(132,219),new Point(136,226),new Point(138,234),new Point(135,241),new Point(128,247),new Point(126,249),new Point(112,255),new Point(103,257),new Point(98,258))),l=new Gesture("right_sq_bracket",new Array(new Point(110,144),new Point(112,146),new Point(115,146),new Point(118,145),new Point(120,145),new Point(124,145),new Point(128,145),new Point(132,145),new Point(136,147),new Point(139,147),new Point(142,150),new Point(145,154),new Point(147,158),new Point(148,164),new Point(148,171),new Point(149,174),new Point(149,181),new Point(149,185),new Point(149,194),new Point(149,206),new Point(149,217),new Point(149,225),new Point(149,227),new Point(151,233),new Point(149,233),new Point(145,231),new Point(137,230),new Point(133,228),new Point(121,226),new Point(108,225),new Point(100,226),new Point(95,227),new Point(92,228))),c=new Gesture("star",new Array(new Point(77,261),new Point(79,259),new Point(80,257),new Point(82,254),new Point(83,251),new Point(85,248),new Point(87,244),new Point(87,242),new Point(88,239),new Point(90,233),new Point(92,226),new Point(95,220),new Point(97,212),new Point(99,206),new Point(101,199),new Point(102,195),new Point(104,184),new Point(105,177),new Point(108,166),new Point(109,158),new Point(113,147),new Point(115,140),new Point(116,137),new Point(118,130),new Point(120,127),new Point(121,124),new Point(123,127),new Point(124,130),new Point(124,133),new Point(127,141),new Point(130,149),new Point(134,159),new Point(136,164),new Point(141,177),new Point(148,193),new Point(155,208),new Point(159,216),new Point(164,224),new Point(165,226),new Point(166,229),new Point(167,231),new Point(167,235),new Point(166,240),new Point(165,245),new Point(163,245),new Point(160,245),new Point(152,239),new Point(140,233),new Point(126,224),new Point(110,211),new Point(92,193),new Point(78,185),new Point(68,181),new Point(59,180),new Point(54,178),new Point(52,178),new Point(53,180),new Point(61,182),new Point(75,184),new Point(95,182),new Point(116,178),new Point(137,176),new Point(155,173),new Point(170,170),new Point(177,169),new Point(182,167),new Point(181,170),new Point(173,178),new Point(171,179),new Point(156,191),new Point(139,205),new Point(121,221),new Point(105,240),new Point(96,254),new Point(90,263),new Point(86,266),new Point(81,269),new Point(81,271))),g=new Gesture("triangle",new Array(new Point(134,138),new Point(133,140),new Point(132,143),new Point(129,147),new Point(128,150),new Point(126,153),new Point(123,157),new Point(121,160),new Point(117,166),new Point(112,172),new Point(106,178),new Point(101,184),new Point(95,190),new Point(90,196),new Point(85,201),new Point(83,203),new Point(80,206),new Point(77,210),new Point(75,212),new Point(73,214),new Point(76,214),new Point(78,213),new Point(82,211),new Point(88,210),new Point(96,208),new Point(106,206),new Point(114,205),new Point(117,205),new Point(129,207),new Point(141,209),new Point(152,212),new Point(156,214),new Point(169,220),new Point(177,222),new Point(185,225),new Point(190,225),new Point(192,225),new Point(192,222),new Point(189,221),new Point(181,215),new Point(179,214),new Point(170,207),new Point(167,204),new Point(159,193),new Point(157,190),new Point(146,175),new Point(138,167),new Point(133,160),new Point(127,156),new Point(124,152))),f=new Gesture("v",new Array(new Point(83,141),new Point(84,143),new Point(85,145),new Point(85,148),new Point(88,153),new Point(89,156),new Point(92,164),new Point(96,174),new Point(100,183),new Point(104,193),new Point(105,198),new Point(107,202),new Point(111,210),new Point(112,214),new Point(114,221),new Point(115,223),new Point(118,233),new Point(119,238),new Point(119,240),new Point(120,243),new Point(121,246),new Point(123,246),new Point(124,243),new Point(125,238),new Point(126,234),new Point(126,230),new Point(129,219),new Point(131,205),new Point(134,191),new Point(138,178),new Point(143,166),new Point(148,157),new Point(152,149),new Point(155,141),new Point(158,135),new Point(159,131),new Point(160,129))),n=new Gesture("x",new Array(new Point(88,150),new Point(87,148),new Point(87,150),new Point(87,152),new Point(88,155),new Point(89,158),new Point(92,163),new Point(93,165),new Point(95,169),new Point(99,175),new Point(104,181),new Point(106,185),new Point(108,188),new Point(113,195),new Point(118,203),new Point(123,209),new Point(127,217),new Point(132,223),new Point(137,231),new Point(140,235),new Point(141,237),new Point(144,239),new Point(146,241),new Point(148,241),new Point(148,238),new Point(147,231),new Point(147,225),new Point(145,216),new Point(143,204),new Point(142,193),new Point(142,189),new Point(142,173),new Point(142,160),new Point(143,147),new Point(144,136),new Point(145,128),new Point(146,126),new Point(146,122),new Point(146,120),new Point(143,120),new Point(140,125),new Point(134,136),new Point(129,147),new Point(121,164),new Point(115,176),new Point(113,180),new Point(106,198),new Point(98,215),new Point(92,228),new Point(88,235),new Point(85,241),new Point(84,238),new Point(84,235),new Point(84,232))),this.DataSet.push(DouglasPeucker(e)),this.DataSet.push(DouglasPeucker(t)),this.DataSet.push(DouglasPeucker(i)),this.DataSet.push(DouglasPeucker(o)),this.DataSet.push(DouglasPeucker(P)),this.DataSet.push(DouglasPeucker(w)),this.DataSet.push(DouglasPeucker(r)),this.DataSet.push(DouglasPeucker(a)),this.DataSet.push(DouglasPeucker(s)),this.DataSet.push(DouglasPeucker(u)),this.DataSet.push(DouglasPeucker(h)),this.DataSet.push(DouglasPeucker(l)),this.DataSet.push(DouglasPeucker(c)),this.DataSet.push(DouglasPeucker(g)),this.DataSet.push(DouglasPeucker(f)),this.DataSet.push(DouglasPeucker(n))),this.Recognize=function(n){var e,t=Date.now(),i=new Gesture("input",n),o=DouglasPeucker(i);if(null==o.Indexes||o.Indexes.length<2)return new Result("Illegal",0,0);var P=1/0;for(let n=0;n<this.DataSet.length;n++){var w,r,a,s=this.DataSet[n];s.Gesture.PointersNum==i.PointersNum&&(r=(w=AlignPolylines(o,s))[0],a=w[1],(a=(1+(s=w[2])/(s+w[3]))*DistanceAtBestAngle(r,a,a.Gesture.RotInv))<P&&(P=a,e=this.DataSet[n].Gesture.Name))}t=Date.now()-t;return null==e?new Result("No match",0,t):new Result(e,(2-P)/2,t)},this.AddTemplate=function(n,e){e=DouglasPeucker(new Gesture(n,e));this.DataSet.push(e);for(var t=0,i=this.DataSet.length,o=0;o<i;o++)this.DataSet[o].Gesture.Name==n&&t++;return t},this.DeleteUserGestures=function(){this.DataSet.length=new Array}}function GetPoly(n,e){return new Polyline(n,e)}function GetPoint(n,e){return n.Gesture.Points[n.Indexes[e]]}function NumVertexes(n){return n.Indexes.length}function NumLines(n){return n.Indexes.length-1}function DistanceAtBestAngle(n,e,t){var i=t?ANGLE_ROTATION_INVARIANT:ANGLE_ROTATION_SENSITIVE,o=Deg2Rad(-i),P=Deg2Rad(i),w=Deg2Rad(ANGLE_STEP),r=IndicativeAngle(n.Gesture,!t),a=IndicativeAngle(e.Gesture,!t);t||(a=r=0);var s=CalculateVectors(n),u=CalculateVectors(e),h=PHI*o+(1-PHI)*P,l=(1-PHI)*o+PHI*P,c=DistanceAtAngle(s,u,-r+h,-a),g=DistanceAtAngle(s,u,-r+l,-a);if(c==1/0||g==1/0)return 1/0;for(;Math.abs(P-o)>w;)c<g?(P=l,l=h,g=c,c=DistanceAtAngle(s,u,-r+(h=PHI*o+(1-PHI)*P),-a)):(o=h,h=l,c=g,g=DistanceAtAngle(s,u,-r+(l=(1-PHI)*o+PHI*P),-a));return Math.min(c,g)}function IndicativeAngle(n,e){n=0<=(n=Math.atan2(-(n.Centroid.Y-n.Points[0].Y),n.Centroid.X-n.Points[0].X))?n:2*Math.PI+n;return e?Math.PI/4*Math.floor((n+Math.PI/8)/(Math.PI/4))+n:n}function DistanceAtAngle(e,t,i,o){var P=0;for(let n=0;n<e.length;n++)P+=VectorDistance(e[n],t[n],i,o);return P}function LengthProportion(n,e,t,i){t=LengthStartEnd(n.Gesture,n.Indexes[e],n.Indexes[t]);return LengthStartEnd(n.Gesture,n.Indexes[e],n.Indexes[i])/t}function LengthStartEnd(n,e,t){return n.Lengths[t]-n.Lengths[e]}function GetLength(n){return n.Lengths[n.Lengths.length-1]}function GetLengthByIndex(n,e){return n.Lengths[e]}function EndpointDistance(n){return Distance(n.Points[0],n.Points[n.Points.length-1])}function CalculateVectors(e){var t=new Array;for(let n=0;n<NumLines(e);n++)t.push(new Vector(LineIntensity(e,n),LineSlope(e,n)));return t.push(new Vector(InvisibleLineIntensity(e),InvisibleLineSlope(e.Gesture))),t}function CalculateCentroid(n){for(var e=new Point(0,0),t=0;t<n.length;t++)e.X+=n[t].X,e.Y+=n[t].Y;return e.X/=n.length,e.Y/=n.length,e}function CalculateBoundingBox(n){for(var e=1/0,t=-1/0,i=1/0,o=-1/0,P=0;P<n.length;P++)e=Math.min(n[P].X,e),t=Math.max(n[P].X,t),i=Math.min(n[P].Y,i),o=Math.max(n[P].Y,o);return new Rectangle(e,i,t-e,o-i)}function Diagonal(n){return Math.sqrt(n.Height*n.Height+n.Width*n.Width)}function PartOf(n,e,t){t=n.Points.slice(e,t);return new Gesture(n.Name,t)}function PointOnCurve(e,n){var t=GetLength(e)*n,i=0;for(let n=1;n<e.Points.length;n++)if(t<=(i+=Distance(e.Points[n],e.Points[n-1])))return n;return e.Points.length-1}function LineIntensity(n,e){return(n.Lengths[e+1]-n.Lengths[e])/(n.Lengths[NumLines(n)]+EndpointDistance(n.Gesture))}function InvisibleLineIntensity(n){return EndpointDistance(n.Gesture)/(n.Lengths[NumLines(n)]+EndpointDistance(n.Gesture))}function LineAngle(n,e){var t=e.X-n.X,e=n.Y-e.Y,t=Math.atan2(e,t);return 0<=t?t:2*Math.PI+t}function InvisibleLineSlope(n){return LineAngle(n.Points[0],n.Points[n.Points.length-1])}function LineSlope(n,e){return LineAngle(GetPoint(n,e),GetPoint(n,e+1))}function Angle(n,e,t,i){var o=Math.sqrt(Math.pow(t.X-n.X,2)+Math.pow(t.Y-n.Y,2)),t=Math.sqrt(Math.pow(t.X-e.X,2)+Math.pow(t.Y-e.Y,2)),n=Math.sqrt(Math.pow(e.X-n.X,2)+Math.pow(e.Y-n.Y,2)),o=Math.acos((t*t+o*o-n*n)/(2*t*o));return i?o*(180/Math.PI):o}function Mod(n,e){return n-Math.floor(n/e)*e}function SlopeChange(n,e){return e<=0||e>=n.Indexes.length-1?0:Mod(LineSlope(n,e-1)-LineSlope(n,e)+Math.PI,2*Math.PI)-Math.PI}function LengthAtAngle(n,e){return GetLengthByIndex(n.Gesture,n.Indexes[e])/GetLength(n.Gesture)}function CalculateLengths(n){var e=0,t=new Array,i=null;return t.push(e),n.forEach(function(n){null!=i&&(e+=Distance(i,n),t.push(e)),i=new Point(n.X,n.Y)}),t}function CalculateLengthsPoly(e,n){var t=0,i=new Array,o=null;return i.push(t),n.forEach(function(n){n=e[n];null!=o&&(t+=Distance(o,n),i.push(t)),o=n}),i}function Distance(n,e){var t=e.X-n.X,n=e.Y-n.Y;return Math.sqrt(t*t+n*n)}function VectorDistance(n,e,t,i){var o=RotationHorizontal(n,t)-RotationHorizontal(e,i),i=RotationVertical(n,t)-RotationVertical(e,i);return Math.sqrt(o*o+i*i)/2}function RotationVertical(n,e){return n.Intensity*Math.sin(n.Angle+e)}function RotationHorizontal(n,e){return n.Intensity*Math.cos(n.Angle+e)}function Deg2Rad(n){return n*Math.PI/180}function NeedlemanWunsch(t,i){var n=0,e=new Array,o=NumLines(t),P=NumLines(i),w=new Array(o+1).fill(0).map(()=>new Array(P+1).fill(0));for(let e=0;e<=o;e++)for(let n=0;n<=P;n++)0==e?w[e][n]=n*GAP_COST:0==n?w[e][n]=e*GAP_COST:w[e][n]=0;for(let e=1;e<=o;e++)for(let n=1;n<=P;n++){var r=w[e-1][n-1]+Similarity(e,n,t,i),a=w[e][n-1]+GAP_COST,s=w[e-1][n]+GAP_COST;w[e][n]=Math.max(Math.max(r,a),s)}var u=o,h=P;w[u][h];for(e.push(new Point(u,h));0<u&&0<h;)w[u][h]!=w[u-1][h-1]+Similarity(u,h,t,i)?w[u][h]==w[u][h-1]+GAP_COST?(e.unshift(new Point(-1,h-1)),h--):(e.unshift(new Point(u-1,-1)),u--):(e.unshift(new Point(u-1,h-1)),n++,u--,h--);var l=new Array;return e.forEach(function(n){-1!=n.X&&-1!=n.Y&&l.push(new Point(n.X,n.Y))}),[l,n]}function Similarity(n,e,t,i){return 1-(BALANCE*Math.abs(LengthAtAngle(t,n-1)-LengthAtAngle(i,e-1))+(1-BALANCE)*AngleDiff(SlopeChange(t,n-1),SlopeChange(i,e-1)))}function AngleDiff(n,e){e=Math.abs(n-e);return e>Math.PI&&(e=2*Math.PI-e),e/Math.PI}function AlignPolylines(e,t){var i=new Array,o=new Array,n=NeedlemanWunsch(e,t),P=n[0],n=n[1]+2,w=0,r=0,a=0,s=0;for(let n=0;n<P.length;n++){var u=P[n],h=u.Y-r-1;for(let n=0;n<h;n++){var l=LengthProportion(t,r,u.Y,r+n+1);Insert(e.Gesture,e.Indexes,i,w,u.X,l),a++}var c=u.X-w-1;for(let n=0;n<c;n++){var g=LengthProportion(e,w,u.X,w+n+1);Insert(t.Gesture,t.Indexes,o,r,u.Y,g),s++}w=u.X,r=u.Y}return e.Indexes.forEach(n=>i.push(n)),i.sort(function(n,e){return n-e}),t.Indexes.forEach(n=>o.push(n)),o.sort(function(n,e){return n-e}),[new Polyline(e.Gesture,i),new Polyline(t.Gesture,o),a+s,n]}function Insert(n,e,t,i,o,P){var w=e[i];w+=PointOnCurve(PartOf(n,e[i],e[o]),P),t.push(w)}function DouglasPeucker(n){var e=Diagonal(n.BoundingBox)/DPR_PARAMS.SParam,t=new Array,i=n.Points.length;if(!(e<=0||i<3)){var o=new Array;for(let n=1;n<i-1;n++)o[n]=!1;o[0]=!0,o[i-1]=!0,Reduce(n.Points,o,e,0,i-1);for(let n=0;n<i;n++)o[n]&&t.push(n);return Fusion2(t,n),GetPoly(n,t)}}function Fusion2(n,e){for(var t=SmallestAngle(n,e);-1!=t;)n.splice(t,1),t=SmallestAngle(n,e)}function SmallestAngle(e,t){if(e.length<=2)return-1;var i=0,o=360,P=e[0],w=e[1];for(let n=2;n<e.length;n++){var r=e[n],a=Math.abs(180-Angle(t.Points[P],t.Points[r],t.Points[w],!0));a<o&&(i=w,o=a),P=w,w=r}var n=o>SLOPE_TRESHOLD?-1:i;return-1==n?-1:e.indexOf(n)}function Reduce(e,n,t,i,o){if(!(o<=i+1)){var P=0,w=0,r=e[i],a=e[o];for(let n=i+1;n<o;n++){var s=OrthogonalDistance(e[n],r,a);P<s&&(P=s,w=n)}t<P&&(n[w]=!0,Reduce(e,n,t,i,w),Reduce(e,n,t,w,o))}}function OrthogonalDistance(n,e,t){return e.X==t.X&&e.Y==t.Y?Distance(e,n):Math.abs((+e.Y*t.X+ +t.Y*n.X+ +n.Y*e.X-+t.Y*e.X-+n.Y*t.X-+e.Y*n.X)/2)/Math.hypot(e.Y-t.Y,e.X-t.X)*2}